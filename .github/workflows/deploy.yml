on:
  pull_request:
    paths:
      - '**terraform/**'
    branches:
      - develop
      - staging
      - main
  push:
    branches:
      - develop
      - staging
      - main
jobs:
  terraform_plan:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./
    env:
      TF_IN_AUTOMATION: true
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2.3.4

      - name: Branch Name From Push
        id: branch-merge
        if: github.event_name == 'push'
        run: echo "branch=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Branch Name From PR
        id: branch-pr
        if: github.event_name == 'pull_request'
        run: echo "branch=${{github.event.pull_request.base.ref}}" >> $GITHUB_ENV

      - name: Branch Name Case Transformation
        id: branch
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ env.branch}}

      - name: Set Secret Keys
        id: set-secret-keys
        run: |
          echo "::set-output name=AWS_ACCESS_KEY_NAME::AWS_KEY_${{steps.branch.outputs.uppercase}}"
          echo "::set-output name=AWS_SECRET_KEY_NAME::AWS_SECRET_${{steps.branch.outputs.uppercase}}"

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets[steps.set-secret-keys.outputs.AWS_ACCESS_KEY_NAME]}}
          aws-secret-access-key: ${{secrets[steps.set-secret-keys.outputs.AWS_SECRET_KEY_NAME]}}
          aws-region: "us-east-2"

      - name: Install Terraform
        id: tf_install
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}

      - name: Set TF Workspace ENV Variable
        id: tf_workspace
        working-directory: ./.github/workflows/terraform
        run: echo "TF_WORKSPACE=${{steps.branch.outputs.lowercase}}" >> $GITHUB_ENV

      - name: Terraform Init
        id: tf_init
        working-directory: ./.github/workflows/terraform
        run: terraform init

      - name: Terraform Plan
        id: tf_plan
        working-directory: ./.github/workflows/terraform
        run: terraform plan -no-color -var-file="terraform.tfvars" -var-file="env/${{ steps.branch.outputs.lowercase }}.tfvars" -out="plan.txt"
        continue-on-error: true

      - name: Github PR Comment with Terraform Plan Detail
        if: github.event_name == 'pull_request'
        uses: robburger/terraform-pr-commenter@v1.5.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXPAND_SUMMARY_DETAILS: 'false'
        with:
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.tf_plan.outputs.stdout, steps.tf_plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.tf_plan.outputs.exitcode }}

      - name: Terraform Plan Failed - Halt Operation
        id: tf_exit_on_failure
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply on Push
        id: tf_apply
        if: github.event_name == 'push'
        working-directory: ./.github/workflows/terraform
        run: terraform apply plan.txt